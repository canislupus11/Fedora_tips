


#Normalne nazwy interfejsów sieciowych (eth0):
ln -s /dev/null /etc/systemd/network/99-default.link; dracut --force /boot/initramfs-$(uname -r).img $(uname -r)
rpm -ivh http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
rpm -ivh http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
dnf -y config-manager --add-repo=https://negativo17.org/repos/fedora-spotify.repo
sh -c 'echo -e "[teams]\nname=teams\nbaseurl=https://packages.microsoft.com/yumrepos/ms-teams\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/teams.repo'
rpm --import https://packages.microsoft.com/keys/microsoft.asc
dnf copr enable rezso/SDR
rpm --import https://packages.microsoft.com/keys/microsoft.asc
echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" | sudo tee /etc/yum.repos.d/vscode.repo > /dev/null

echo "max_parallel_downloads=20" >> /etc/dnf/dnf.conf
echo "fastestmirror=1" >> /etc/dnf/dnf.conf
echo "deltarpm=true" >> /etc/dnf/dnf.conf

cat << EOF > /etc/yum.repos.d/google-chrome.repo
[google-chrome]
name=google-chrome - \$basearch
baseurl=http://dl.google.com/linux/chrome/rpm/stable/\$basearch
enabled=1
gpgcheck=1
gpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub
EOF

dnf -y remove gparted festival korganizer khelpcenter akregator kmag kfind jovie kwrite kamera kruler mariadb-server libreswan kmouth konqueror kmail kget knode smtube gwenview
dnf -y install ark audacity bash-completion cheese clementine code cups cura darktable discord dnf-plugin-system-upgrade freeze fuse-exfat gcc geeqie gimp git glabels google-chrome-stable htop hugin inkscape kate kcm_wacomtablet kdenlive keepassxc kernel-tools kicad kicad-packages3d kile latexmk librecad libreoffice libvdpau lm_sensors mc mesa-vdpau-drivers mscore-fonts-all mlocate moserial nano ncdu NetworkManager-openvpn nextcloud-client nmap obs-studio okular openocd openscad pciutils pinentry-qt pitivi powerline powertop pulseview quassel-client rdesktop redshift rEFInd rtorrent screen smplayer spectacle spotify-client sshfs stellarium stlink telegram-desktop telnet texlive-bbding texlive-cancel texlive-cases texlive-collection-langpolish texlive-extarrows texlive-multirow texlive-preprint texlive-secdot texlive-wrapfig thunderbird unrar usbutils v4l2loopback vim VirtualBox vlc wireshark xine-ui libheif-freeworld libavcodec-freeworld libfreeaptx pipewire-codec-aptx


dnf -y autoremove
dracut --regenerate-all --force
usermod -a -G wireshark lupus ;usermod -a -G lock lupus ;usermod -a -G dialout lupus

# wylaczenie splitDNS
systemctl disable systemd-resolved.service
systemctl stop systemd-resolved.service
rm -f /etc/resolv.conf 
systemctl restart NetworkManager.service
systemctl restart NetworkManager.service

echo "Port 5522" >> /etc/ssh/sshd_config
semanage port -a -t ssh_port_t -p tcp 5522
firewall-cmd --zone=public --add-port=5522/tcp --permanent

echo "SystemMaxUse=250M" >> /etc/systemd/journald.conf
echo "SystemMaxFileSize=50M" >> /etc/systemd/journald.conf

#Do radia: 
dnf -y install gpredict qsstv tucnak2 sdr++ fldigi rtl-sdr wsjtx cqrlog urh gnuradio mpg123 chirp+wx
wget https://raw.githubusercontent.com/athena-metis/limesuite-fedora-build/master/build-limesuite.sh; bash build-limesuite.sh
    
#Na laptopie: 
        dnf -y install libva-intel-driver
echo "SUBSYSTEM==\"tty\", ATTRS{idVendor}==\"0403\", ATTRS{idProduct}==\"6015\", ATTRS{serial}==\"DA01A9G0\", SYMLINK+=\"FT1000MP\"" >> /etc/udev/rules.d/radio.rules
udevadm control --reload-rules && udevadm trigger

#Do skryptu HSowego: 
#dnf -y install PyYAML python3-ldap3 python3-virtualenv-api python3-selenium
#virtualenv venv
#source venv/bin/activate
#pip install -r requirements.txt


#jako user: fmtutil --missing


Kolory w terminalu:
    do .bashrc:
        if [[ ${EUID} == 0 ]] ; then 
                PS1='\[\033[01;31m\]\h\[\033[01;34m\] \w \$\[\033[00m\] ' 
        else 
                PS1='\[\033[01;32m\]\u@\h\[\033[01;34m\] \w \$\[\033[00m\] ' 
        fi



NVIDIA:
    Zainstalować nvidia, wywalic plik modułu naovou i wykonać /usr/sbin/akmods --force
    dracut --force /boot/initramfs-$(uname -r).img $(uname -r)
    


WEBGL W CHROME:
    http://www.hackingdream.net/2017/04/webgl-graphics-acceleration-google-earth-cannot-loaded.html
    
    
WYŁĄCZYĆ:
     
  systemctl disable abrtd.service || true
  systemctl disable abrt-ccpp.service || true
  systemctl disable abrt-oops.service || true
  systemctl disable auditd.service
  systemctl disable rngd.service || true
  systemctl disable libvirtd.service || true
  systemctl disable smartd.service
  systemctl disable mcelog.service || true
  systemctl disable lvm2-monitor.service || true
  systemctl disable mdmonitor.service
  systemctl disable fprintd.service || true
  systemctl disable lvm2-monitor
  systemctl disable iscsi
  
  #Jeśli laptop:
  systemctl enable powertop.service
------------------------------------------     
DIST UPGRADE:
        dnf -y upgrade --refresh; dnf -y install dnf-plugin-system-upgrade; dnf -y system-upgrade download --releasever=34; dnf -y system-upgrade reboot
------------------------------------------   
    
fancontrol.service:
 
[Unit]
Description=Fan control daemon

[Service]
PIDFile=/var/run/fancontrol.pid
ExecStart=/usr/sbin/fancontrol

[Install]
WantedBy=multi-user.target


/usr/lib/systemd/system-sleep/fancontrol.sh
#!/bin/sh
if [ "${1}" == "pre" ]; then
  systemctl stop fancontrol
elif [ "${1}" == "post" ]; then
  systemctl start fancontrol
fi

lcd4linux.service:

[Unit]
Description=daemon for driving LCD based displays

[Service]
Type=forking
EnvironmentFile=-/etc/default/lcd4linux
ExecStart=/usr/bin/lcd4linux $ARGS
User=root
PIDFile=/var/run/lcd4linux.pid
Restart=on-abort

[Install]
WantedBy=multi-user.target

---------------------------------------

DOCKER:
            dnf -y install docker 

systemctl start docker 
   newgrp docker
  sudo groupadd docker && sudo gpasswd -a ${USER} docker && sudo systemctl restart docker
 
    
    
   System wide pulseaudio:
    Put this text in the file /etc/systemd/system/pulseaudio.service:
[Unit]
Description=PulseAudio system server
[Service]
Type=notify
Exec=pulseaudio --daemonize=no --system --realtime --log-target=journal
[Install]
WantedBy=multi-user.target
This unit file is a straightforward method that starts PulseAudio and makes sure it is running.
Now enable and start this unit file by running the following commands:
systemctl --system enable pulseaudio.service
systemctl --system start pulseaudio.service

